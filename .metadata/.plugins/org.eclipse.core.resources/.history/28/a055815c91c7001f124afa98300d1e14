package com.lib.book.shop.dao.impl;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.List;

import org.apache.log4j.Logger;

import com.lib.book.shop.dao.BookDAO;
import com.lib.book.shop.to.BookTO;
import com.lib.book.shop.to.UserTO;
import com.lib.book.shop.util.JDBCUtil;

public class JDBCBookDAO implements BookDAO{

	Logger log=Logger.getLogger(this.getClass());

	@Override
	public boolean addBook(BookTO bto) {
		boolean added = false;
		Connection con = null;
		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			con = JDBCUtil.getConnection();
			ps = con.prepareStatement(
					"insert into book_table(bookName,author,cost,publication,edition) values(?,?,?,?,?)");
			ps.setString(1, bto.getBookName());
			ps.setString(2, bto.getAuthor());
			ps.setFloat(3, bto.getCost());
			ps.setString(4, bto.getPublication());
			ps.setString(5, bto.getEdition());
			int x = ps.executeUpdate();
			
			if (x>0) {
				added=true;
			}
		} catch (Exception e) {
			added=false;			
			log.error("Exception in addBook :\n", e);
		} finally {
			JDBCUtil.close(rs, ps, con);
		}
		return added;
	}

	@Override
	public boolean alreadyExist(BookTO bto) {
		boolean exist = false;
		Connection con = null;
		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			con = JDBCUtil.getConnection();
			ps = con.prepareStatement(
					"select * from book_table where bookName=? and author=? and cost=? and publication=? and edition=?)");
			ps.setString(1, bto.getBookName());
			ps.setString(2, bto.getAuthor());
			ps.setFloat(3, bto.getCost());
			ps.setString(4, bto.getPublication());
			ps.setString(5, bto.getEdition());
			rs= ps.executeQuery();
			
			if (rs.next()) {
				exist=true;
			}
		} catch (Exception e) {
			exist=false;			
			log.error("Exception in alreadyExist :\n", e);
		} finally {
			JDBCUtil.close(rs, ps, con);
		}
		return exist;
	}

	@Override
	public List searchBook(BookTO bto, int start, int numberOfBook) {
		List bookList = null;
		Connection con = null;
		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			con = JDBCUtil.getConnection();
			ps = con.prepareStatement();
			ps.setString(1, bto.getBookName());
			ps.setString(2, bto.getAuthor());
			ps.setFloat(3, bto.getCost());
			ps.setString(4, bto.getPublication());
			ps.setString(5, bto.getEdition());
			int x = ps.executeUpdate();
			
			if (x>0) {
				added=true;
			}
		} catch (Exception e) {
			added=false;			
			log.error("Exception in addBook :\n", e);
		} finally {
			JDBCUtil.close(rs, ps, con);
		}
		return added;
	}

	@Override
	public int getTotalNumberOfBook(BookTO bto) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public boolean deleteBook(int bookId) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public BookTO getBookById(String bid) {
		// TODO Auto-generated method stub
		return null;
	}
	
	private String prepareQuery(BookTO bto)

}
