package com.lib.book.shop.dao.impl;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Calendar;
import java.util.Iterator;
import java.util.List;

import org.apache.log4j.Logger;

import com.lib.book.shop.dao.OrderDAO;
import com.lib.book.shop.to.BookTO;
import com.lib.book.shop.to.OrderTO;
import com.lib.book.shop.to.UserTO;
import com.lib.book.shop.util.JDBCUtil;

public class JDBCOrderDAO implements OrderDAO {

	Logger log = Logger.getLogger(this.getClass());

	@Override
	public String placeOrder(OrderTO oto, String ip) {
		String orderId = null;
		Connection con = null;
		PreparedStatement st = null;

		try {
			con = JDBCUtil.getConnection();
			st = con.prepareStatement(
					"insert into order_table values(?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
			orderId=getOrderId(oto.getOrderDate(), ip); 
			st.setString(1, orderId);
			st.setString(2, oto.getAddress());
			st.setString(3, oto.getStreet());
			st.setString(4, oto.getCity());
			st.setString(5, oto.getState());
			st.setString(6, oto.getCountry());
			st.setString(7, oto.getZip());
			st.setString(8, oto.getCardNo());
			st.setString(9, oto.getExpDate());
			st.setFloat(10, oto.getTotalAmount());
			st.setInt(11, oto.getTotalItem());
			st.setString(12, oto.getUserId());
			st.setString(13, oto.getOrderDate());
			st.setString(14, "New");
			int ab=st.executeUpdate();
			
			if (ab>0) {
				PreparedStatement ps = con.prepareStatement(
						"insert into orderItem_table(bookId,quantity,orderId) values(?,?,?)");
				Iterator it=oto.getOrderItemList().iterator();
				while (it.hasNext()) {
					BookTO bto=(BookTO)it.next();
					String uid = rs.getString("userId");
					String fName = rs.getString("firstName");
					String mName = rs.getString("middleName");
					String lName = rs.getString("lastName");
					String eml = rs.getString("email");
					long phn = rs.getLong("phone");
					String logId = rs.getString("loginId");
					String unm = rs.getString("username");
					String pwd = rs.getString("password");
					String role = rs.getString("role");
					uto = new UserTO(fName, mName, lName, eml, phn, unm, pwd, role);
					uto.setUserId(uid);
					uto.setLoginId(logId);
				}
			}
		} catch (Exception e) {
			uto = null;
			log.error("Exception in verifyUser :\n", e);
		} finally {
			JDBCUtil.close(rs, ps, con);
		}
		return uto;
	}

	@Override
	public List getOrderByUserId(String userId) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public List getAllOrderInfo() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void updateStatus(String orderId, String status) {
		// TODO Auto-generated method stub

	}

	@Override
	public OrderTO getOrderByOrderId(String orderId) {
		// TODO Auto-generated method stub
		return null;
	}

	private String getOrderId(String date, String ip) {
		String id = "";
		Calendar cal = Calendar.getInstance();
		String str[] = date.split("/");
		String hh = cal.get(Calendar.HOUR) + "";
		String mm = cal.get(Calendar.MINUTE) + "";
		String ss = cal.get(Calendar.SECOND) + "";
		String dt = str[0] + str[1] + str[2];
		String time = "hh+mm+ss";
		String ips[] = ip.split("\\.");
		ip = ips[0] + ips[1] + ips[2] + ips[3];
		String hexDate = Long.toHexString(Long.parseLong(dt));
		String hexTime = Long.toHexString(Long.parseLong(time));
		String hexIP = Long.toHexString(Long.parseLong(ip));
		id = hexDate + "J" + hexIP + "J" + hexTime;
		return id;
	}

}
